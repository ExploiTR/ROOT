package app.exploitr.root.axes;


import java.io.IOException;
import android.app.Activity;
import android.content.Context;
import android.graphics.Typeface;
import android.os.Build;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import android.widget.Toast;
import app.exploitr.root.axes.R;


public class MainActivity extends Activity {

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		
		final LinearLayout loutx = (LinearLayout)findViewById(R.id.loutx);
		final LinearLayout loutz = (LinearLayout)findViewById(R.id.loutz);
		final ProgressBar loading = (ProgressBar)findViewById(R.id.loading);
		final ImageView android = (ImageView)findViewById(R.id.android);
		ImageView rootinfi = (ImageView)findViewById(R.id.rootinfi);
		ImageView rootstatimg = (ImageView)findViewById(R.id.rootstatimg);
		TextView rootstattext = (TextView)findViewById(R.id.rootstattext) ;
		TextView devicem = (TextView)findViewById(R.id.devicem) ;
		TextView androidv = (TextView)findViewById(R.id.androidv) ;
		String device = Build.DEVICE;
		String androidvn = Build.VERSION.RELEASE;
		Typeface typeface = Typeface.createFromAsset(getAssets(), "sfont.ttf");
		rootstattext.setTypeface(typeface);
		Typeface typeface2 = Typeface.createFromAsset(getAssets(), "pfont.ttf");
		devicem.setTypeface(typeface2);
		androidv.setTypeface(typeface2);
		
        Runtime runtime = Runtime.getRuntime();
	    Process process;
	   
	    
	    try {
	        process = runtime.exec("su -c ls /data/data"); //Checking if It can access data/data - It's the key
	        process.waitFor();
	        int exit = process.exitValue();
	        if (exit == 0) { 
	        	
	    		rootinfi.setImageResource(R.drawable.unlock);
	    		rootstatimg.setImageResource(R.drawable.rooted);
	    		devicem.setText(device);
	    		androidv.setText(androidvn);
	    		loading.setVisibility(View.INVISIBLE);
	    		android.setVisibility(View.INVISIBLE);
	    		loutx.setVisibility(View.VISIBLE);
	    		loutz.setVisibility(View.VISIBLE);
	    		
	        } else { 
	        	
	    		rootinfi.setImageResource(R.drawable.lock);
	    		rootstatimg.setImageResource(R.drawable.unrooted);
	    		devicem.setText(device);
	    		androidv.setText(androidvn);
	    		loading.setVisibility(View.INVISIBLE);
	    		android.setVisibility(View.INVISIBLE);
	    		loutx.setVisibility(View.VISIBLE);
	    		loutz.setVisibility(View.VISIBLE);

	        }
	        } catch (IOException e) {
				e.printStackTrace();
				Context context = getApplicationContext();
				CharSequence text = (CharSequence) e;
				int duration = Toast.LENGTH_SHORT;

				Toast toast = Toast.makeText(context, text, duration);
				toast.show();
			} catch (InterruptedException e) {
				e.printStackTrace();
				Context context = getApplicationContext();
				CharSequence text = (CharSequence) e;
				int duration = Toast.LENGTH_SHORT;

				Toast toast = Toast.makeText(context, text, duration);
				toast.show();
			}finally{}
	    
	    

	
	
	
	
	
	}

@Override
public boolean onCreateOptionsMenu(Menu menu) {
    // Creates a menu with items contained in /menu/main.xml
    MenuInflater inflater = getMenuInflater();
    inflater.inflate(R.menu.main, menu);
    return true;}

@Override
public boolean onOptionsItemSelected(MenuItem item) {
    // when MenuItemSelected
    switch (item.getItemId()) {

  }
	return false;
 }
}
